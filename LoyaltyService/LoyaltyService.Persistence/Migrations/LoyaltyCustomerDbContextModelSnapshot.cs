// <auto-generated />
using System;
using LoyaltyService.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoyaltyService.Persistence.Migrations
{
    [DbContext(typeof(LoyaltyCustomerDbContext))]
    partial class LoyaltyCustomerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoyaltyService.Domain.Entities.LoyaltyCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("LoyaltyCustomers", (string)null);
                });

            modelBuilder.Entity("LoyaltyService.Domain.Entities.Redeem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LoyaltyCustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RedeemDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LoyaltyCustomerId");

                    b.ToTable("Redeems", (string)null);
                });

            modelBuilder.Entity("LoyaltyService.Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("LoyaltyCustomerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LoyaltyCustomerId")
                        .IsUnique();

                    b.ToTable("Wallets", (string)null);
                });

            modelBuilder.Entity("LoyaltyService.Domain.Entities.Redeem", b =>
                {
                    b.HasOne("LoyaltyService.Domain.Entities.LoyaltyCustomer", null)
                        .WithMany("Redeems")
                        .HasForeignKey("LoyaltyCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LoyaltyService.Domain.ValueObjects.PointsAmount", "Transaction", b1 =>
                        {
                            b1.Property<Guid>("RedeemId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.HasKey("RedeemId");

                            b1.ToTable("Redeems");

                            b1.WithOwner()
                                .HasForeignKey("RedeemId");
                        });

                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("LoyaltyService.Domain.Entities.Wallet", b =>
                {
                    b.HasOne("LoyaltyService.Domain.Entities.LoyaltyCustomer", null)
                        .WithOne("Wallet")
                        .HasForeignKey("LoyaltyService.Domain.Entities.Wallet", "LoyaltyCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LoyaltyService.Domain.ValueObjects.PointsAmount", "PointsBalance", b1 =>
                        {
                            b1.Property<Guid>("WalletId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.HasKey("WalletId");

                            b1.ToTable("Wallets");

                            b1.WithOwner()
                                .HasForeignKey("WalletId");
                        });

                    b.Navigation("PointsBalance")
                        .IsRequired();
                });

            modelBuilder.Entity("LoyaltyService.Domain.Entities.LoyaltyCustomer", b =>
                {
                    b.Navigation("Redeems");

                    b.Navigation("Wallet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
